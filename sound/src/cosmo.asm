org 100h

	jmp main

%include "speaker_drv.asm"

main:
	mov ah, 0x01
	mov cx, 0x100
	int 0x10

	mov ax, 0x1003
	mov bl, 0x00
	int 0x10

	call set_palette

;	push 0xB800
;	pop es
;	sub di, di
;	sub dx, dx
;.c:
;	mov ah, dl
;	shl ah, 4
;	mov al, ' '
;	mov cx, 80
;.r:
;	stosw
;	loop .r
;	inc dx
;	cmp dx, 25
;	jnz .c
;	ret

	call speaker_drv_init
	mov si, sound2
	call speaker_drv_play

	fld1
	fld dword [beta]
	fsubp st1, st0
	fld dword [beta]
	push 0xB800
	pop es
frame:
	call calc_bins

	sub di, di
	sub dx, dx
.cols:
	sub cx, cx
.rows:
	mov ax, 0x0720
	cmp cx, 70
	jae .skip
	cmp cx, 10
	jb .skip

	mov bp, 24
	sub bp, dx

	push ax
	mov ax, cx
	sub ax, 10
	mov bl, 3
	div bl
	mov bl, al
	sub bh, bh
	cmp ah, 2
	pop ax
	je .skip
	shl bx, 1
	cmp bp, [bx + ibins]
	ja .skip
	mov ax, bp
	shl ax, 8
	mov al, 0xDB
.skip:
	stosw
	inc cx
	cmp cx, 80
	jb .rows

	inc dx
	cmp dx, 25
	jb .cols

	in al, 0x60
	dec al
	jnz frame

;	cmp byte [speaker_drv_irq_state], SPEAKER_PLAY
;	je frame

	mov ah, 0
	int 16h
	call speaker_drv_close
	mov ax, 0x03
	int 0x10
	ret

calc_bins:
	pusha
	mov bx, [speaker_drv_irq_sample_ptr]
	fld dword [pit_freq_khz]
	fild word [bx]
	fdivp
	fld dword [half]
	fsubp
	fistp word [bin_idx]
	mov di, [bin_idx]
	shl di, 2
	mov bp, ibins
	mov si, bins
	add di, si
	mov cx, 20
.bin_loop:
	fld dword [si]
	fmul st0, st1
	cmp si, di
	jne .other_bin
	fadd st0, st2
.other_bin:
	fst dword [si]
	fld dword [ten]
	fmulp
	fld dword [half]
	fsubp
	fistp word [bp]
	add si, 4
	add bp, 2
	loop .bin_loop
	popa
	ret

set_palette:
	mov cx, 16
	mov si, palette
.palette:
	push cx
	mov bl, [si]
	sub bh, bh
	mov dh, [si + 1]
	mov ch, [si + 2]
	mov cl, [si + 3]
	mov ax, 0x1010
	int 0x10
	pop cx
	add si, 4
	loop .palette
	ret

sound1: dw 0x1A5E, 0x1A5E, 0x1A5E, 0, 0, 0x1f40, 0x1f40, 0x1f40, 0xffff
sound2: db 0x7E, 0x04, 0x7E, 0x04, 0x7E, 0x04, 0x7E, 0x04, 0x7E, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x10, 0x36, 0x10, 0x36, 0x10, 0x36, 0x10, 0x36, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x0A, 0x28, 0x0A, 0x28, 0x0A, 0x28, 0x0A, 0x28, 0x0A, 0x28, 0x0A, 0x28, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x07, 0x3A, 0x07, 0x3A, 0x07, 0x3A, 0x07, 0x3A, 0x07, 0x3A, 0x07, 0x3A, 0x07, 0x3A, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x18, 0xA8, 0x16, 0x4A, 0x15, 0x82, 0x14, 0x24, 0x13, 0x8E, 0x12, 0xC6, 0x11, 0xCC, 0x10, 0xD2, 0x0F, 0x3C, 0x0F, 0x74, 0x0E, 0x7A, 0x0D, 0x86, 0x0B, 0x60, 0x09, 0x98, 0x08, 0x02, 0x08, 0x3A, 0x07, 0xA4, 0x06, 0xDC, 0x05, 0x46, 0x05, 0xB0, 0x04, 0x1A, 0x04, 0xFF, 0xFF

pit_freq_khz: dd 23863.64 ;dd 11931.82
half:         dd 0.5
ten:          dd 16.0
bin_idx:      dw 0
bins:         times 20 dd 0.0
ibins:        times 20 dw 0
palette:
	db 0x00, 0x00, 0x00, 0x00
	db 0x01, 0x00, 0x1d, 0x00
	db 0x02, 0x00, 0x20, 0x00
	db 0x03, 0x00, 0x22, 0x00
	db 0x04, 0x14, 0x24, 0x00
	db 0x05, 0x22, 0x25, 0x00
	db 0x14, 0x2f, 0x26, 0x00
	db 0x07, 0x3b, 0x25, 0x00
	db 0x38, 0x3f, 0x24, 0x00
	db 0x39, 0x3f, 0x22, 0x0a
	db 0x3a, 0x3f, 0x21, 0x18
	db 0x3b, 0x3f, 0x20, 0x25
	db 0x3c, 0x3f, 0x22, 0x32
	db 0x3d, 0x3f, 0x26, 0x3f
	db 0x3e, 0x3f, 0x28, 0x3f
	db 0x3f, 0x3f, 0x3f, 0x3f

beta:         dd 0.8

pit_freq:   dd 1193182.0
multiplier: dd 17.847503731
color:      dw 0

;.colors:
;	mov dx, 0x3C8
;	sub ax, ax
;	out dx, al
;	inc dx
;	mov ax, cs:[speaker_drv_irq_sample_ptr]
;	test ax, ax
;	jz .zero
;	fld dword [multiplier]
;	fild dword [pit_freq]
;	fild word [speaker_drv_irq_sample_ptr]
;	fdivp
;	fyl2x
;	fistp word [color]
;	mov al, byte [color]
;.zero:
;	out dx, al
;	out dx, al
;	mov al, 0
;	out dx, al
;	cmp byte cs:[speaker_drv_irq_state], SPEAKER_PLAY
;	je .colors
